(()=>{var a={};a.id=957,a.ids=[957],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},27379:(a,b,c)=>{"use strict";c.d(b,{e:()=>e});var d=c(79464);class e{static async getAllHealthData(a){try{console.log("\uD83D\uDD0D [HealthDataService] Buscando todos os dados de sa\xfade para usu\xe1rio:",a);let b=await d.z.$queryRaw`
        SELECT id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
        FROM health_data 
        WHERE "userId" = ${a}
        ORDER BY date DESC, "createdAt" DESC
      `;return console.log("✅ [HealthDataService] Dados encontrados:",b.length),b.map(a=>({id:a.id,type:a.type,value:parseFloat(a.value),secondaryValue:a.secondaryValue?parseFloat(a.secondaryValue):void 0,date:a.date,notes:a.notes||void 0,userId:a.userId,createdAt:new Date(a.createdAt),updatedAt:new Date(a.updatedAt)}))}catch(a){throw console.error("❌ [HealthDataService] Erro ao buscar dados de sa\xfade:",a),a}}static async getHealthDataByType(a,b){try{console.log("\uD83D\uDD0D [HealthDataService] Buscando dados de sa\xfade por tipo:",b,"para usu\xe1rio:",a);let c=await d.z.$queryRaw`
        SELECT id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
        FROM health_data 
        WHERE "userId" = ${a} AND type = ${b}
        ORDER BY date DESC, "createdAt" DESC
      `;return console.log("✅ [HealthDataService] Dados por tipo encontrados:",c.length),c.map(a=>({id:a.id,type:a.type,value:parseFloat(a.value),secondaryValue:a.secondaryValue?parseFloat(a.secondaryValue):void 0,date:a.date,notes:a.notes||void 0,userId:a.userId,createdAt:new Date(a.createdAt),updatedAt:new Date(a.updatedAt)}))}catch(a){throw console.error("❌ [HealthDataService] Erro ao buscar dados por tipo:",a),a}}static async getHealthDataById(a,b){try{console.log("\uD83D\uDD0D [HealthDataService] Buscando dado de sa\xfade ID:",a);let c=await d.z.$queryRaw`
        SELECT id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
        FROM health_data 
        WHERE id = ${a} AND "userId" = ${b}
        LIMIT 1
      `;if(0===c.length)return console.log("❌ [HealthDataService] Dado de sa\xfade n\xe3o encontrado"),null;let e=c[0];return{id:e.id,type:e.type,value:parseFloat(e.value),secondaryValue:e.secondaryValue?parseFloat(e.secondaryValue):void 0,date:e.date,notes:e.notes||void 0,userId:e.userId,createdAt:new Date(e.createdAt),updatedAt:new Date(e.updatedAt)}}catch(a){throw console.error("❌ [HealthDataService] Erro ao buscar dado por ID:",a),a}}static async addHealthData(a,b){try{console.log("➕ [HealthDataService] Criando novo dado de sa\xfade:",a);let c=Date.now(),e=Math.floor(1e6*Math.random()),f=`health_${c}_${e}`,g=(await d.z.$queryRaw`
        INSERT INTO health_data (id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt")
        VALUES (${f}, ${a.type}, ${a.value}, ${a.secondaryValue||null}, ${a.date}, ${a.notes||null}, ${b}, NOW(), NOW())
        RETURNING id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
      `)[0];return console.log("✅ [HealthDataService] Dado criado com sucesso:",g.id),{id:g.id,type:g.type,value:parseFloat(g.value),secondaryValue:g.secondaryValue?parseFloat(g.secondaryValue):void 0,date:g.date,notes:g.notes||void 0,userId:g.userId,createdAt:new Date(g.createdAt),updatedAt:new Date(g.updatedAt)}}catch(a){throw console.error("❌ [HealthDataService] Erro ao criar dado de sa\xfade:",a),a}}static async updateHealthData(a,b,c){try{console.log("✏️ [HealthDataService] Atualizando dado de sa\xfade:",a,b);let e=await d.z.$queryRaw`
        SELECT id FROM health_data WHERE id = ${a} AND "userId" = ${c}
        LIMIT 1
      `;if(0===e.length)return console.log("❌ [HealthDataService] Dado n\xe3o encontrado ou n\xe3o pertence ao usu\xe1rio"),null;let f=(await d.z.$queryRaw`
        UPDATE health_data 
        SET type = ${b.type}, value = ${b.value}, "secondaryValue" = ${b.secondaryValue||null}, 
            date = ${b.date}, notes = ${b.notes||null}, "updatedAt" = NOW()
        WHERE id = ${a}
        RETURNING id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
      `)[0];return console.log("✅ [HealthDataService] Dado atualizado com sucesso:",a),{id:f.id,type:f.type,value:parseFloat(f.value),secondaryValue:f.secondaryValue?parseFloat(f.secondaryValue):void 0,date:f.date,notes:f.notes||void 0,userId:f.userId,createdAt:new Date(f.createdAt),updatedAt:new Date(f.updatedAt)}}catch(a){throw console.error("❌ [HealthDataService] Erro ao atualizar dado:",a),a}}static async deleteHealthData(a,b){try{console.log("\uD83D\uDDD1️ [HealthDataService] Removendo dado de sa\xfade:",a);let c=await d.z.$queryRaw`
        SELECT id FROM health_data WHERE id = ${a} AND "userId" = ${b}
        LIMIT 1
      `;if(0===c.length)return console.log("❌ [HealthDataService] Dado n\xe3o encontrado ou n\xe3o pertence ao usu\xe1rio"),!1;return await d.z.$executeRaw`
        DELETE FROM health_data WHERE id = ${a}
      `,console.log("✅ [HealthDataService] Dado removido com sucesso:",a),!0}catch(a){throw console.error("❌ [HealthDataService] Erro ao remover dado:",a),a}}static async getHealthDataByDateRange(a,b,c,e){try{let f,g;console.log("\uD83D\uDCC5 [HealthDataService] Buscando dados por per\xedodo:",{startDate:b,endDate:c,type:e}),e?(f=`
          SELECT id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
          FROM health_data 
          WHERE "userId" = $1 AND type = $2 AND date >= $3 AND date <= $4
          ORDER BY date ASC, "createdAt" ASC
        `,g=[a,e,b,c]):(f=`
          SELECT id, type, value, "secondaryValue", date, notes, "userId", "createdAt", "updatedAt"
          FROM health_data 
          WHERE "userId" = $1 AND date >= $2 AND date <= $3
          ORDER BY date ASC, "createdAt" ASC
        `,g=[a,b,c]);let h=await d.z.$queryRawUnsafe(f,...g);return console.log("✅ [HealthDataService] Dados por per\xedodo encontrados:",h.length),h.map(a=>({id:a.id,type:a.type,value:parseFloat(a.value),secondaryValue:a.secondaryValue?parseFloat(a.secondaryValue):void 0,date:a.date,notes:a.notes||void 0,userId:a.userId,createdAt:new Date(a.createdAt),updatedAt:new Date(a.updatedAt)}))}catch(a){throw console.error("❌ [HealthDataService] Erro ao buscar dados por per\xedodo:",a),a}}static async generateSampleData(a){try{if(console.log("\uD83C\uDF31 [HealthDataService] Gerando dados de exemplo para usu\xe1rio:",a),(await d.z.$queryRaw`
        SELECT id FROM health_data WHERE "userId" = ${a} LIMIT 1
      `).length>0)return void console.log("ℹ️ [HealthDataService] Usu\xe1rio j\xe1 possui dados, pulando gera\xe7\xe3o de exemplo");let b=new Date,c=[];for(let d=6;d>=0;d--){let e=new Date(b);e.setDate(b.getDate()-d);let f=e.toISOString().split("T")[0];c.push({type:"bloodPressure",value:Math.floor(20*Math.random())+110,secondaryValue:Math.floor(15*Math.random())+70,date:f,userId:a}),c.push({type:"heartRate",value:Math.floor(20*Math.random())+65,date:f,userId:a}),c.push({type:"glucose",value:Math.floor(40*Math.random())+80,date:f,userId:a}),d%2==0&&c.push({type:"weight",value:Math.round((5*Math.random()+70)*10)/10,date:f,userId:a}),d%3==0&&c.push({type:"temperature",value:Math.round((+Math.random()+36)*10)/10,date:f,userId:a})}for(let a of c){let b=Date.now(),c=Math.floor(1e6*Math.random()),e=`health_${b}_${c}`;await d.z.$executeRaw`
          INSERT INTO health_data (id, type, value, "secondaryValue", date, "userId", "createdAt", "updatedAt")
          VALUES (${e}, ${a.type}, ${a.value}, ${a.secondaryValue||null}, ${a.date}, ${a.userId}, NOW(), NOW())
        `}console.log("✅ [HealthDataService] Dados de exemplo criados:",c.length)}catch(a){throw console.error("❌ [HealthDataService] Erro ao gerar dados de exemplo:",a),a}}}},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},58259:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>F,patchFetch:()=>E,routeModule:()=>A,serverHooks:()=>D,workAsyncStorage:()=>B,workUnitAsyncStorage:()=>C});var d={};c.r(d),c.d(d,{GET:()=>x,POST:()=>y,PUT:()=>z});var e=c(96559),f=c(48088),g=c(37719),h=c(26191),i=c(81289),j=c(261),k=c(92603),l=c(39893),m=c(14823),n=c(47220),o=c(66946),p=c(47912),q=c(99786),r=c(46143),s=c(86439),t=c(43365),u=c(32190),v=c(27379);function w(a){try{let b=a.headers.get("authorization");if(console.log("\uD83D\uDD10 Authorization header:",b?"Presente":"Ausente"),!b||!b.startsWith("Bearer "))return console.log("❌ Header de autoriza\xe7\xe3o inv\xe1lido"),null;let c=b.substring(7);console.log("\uD83C\uDFAB Token extra\xeddo (primeiros 20 chars):",c.substring(0,20)+"...");let d=c.split(".")[1],e=JSON.parse(atob(d));return console.log("\uD83D\uDC64 UserId extra\xeddo:",e?.userId),e?.userId||null}catch(a){return console.error("❌ Erro ao extrair userId do token:",a),null}}async function x(a){try{let b;console.log("\uD83D\uDCCA [API] Iniciando busca de dados de sa\xfade...");let c=w(a);if(!c)return console.log("❌ [API] Falha na autentica\xe7\xe3o - token inv\xe1lido"),u.NextResponse.json({message:"Token de autoriza\xe7\xe3o inv\xe1lido"},{status:401});console.log("✅ [API] Autentica\xe7\xe3o v\xe1lida para usu\xe1rio:",c);let{searchParams:d}=new URL(a.url),e=d.get("type"),f=d.get("startDate"),g=d.get("endDate");console.log("\uD83D\uDD0D [API] Par\xe2metros da busca:",{type:e,startDate:f,endDate:g});try{f&&g?(console.log("\uD83D\uDCC5 [API] Buscando por per\xedodo espec\xedfico..."),b=await v.e.getHealthDataByDateRange(c,f,g,e||void 0)):e?(console.log("\uD83D\uDD0D [API] Buscando por tipo espec\xedfico:",e),b=await v.e.getHealthDataByType(c,e)):(console.log("\uD83D\uDCCB [API] Buscando todos os dados..."),b=await v.e.getAllHealthData(c))}catch(a){return console.error("❌ [API] Erro no servi\xe7o Prisma:",a),console.error("❌ [API] Stack trace do servi\xe7o:",a instanceof Error?a.stack:"N/A"),u.NextResponse.json({message:"Erro ao acessar dados de sa\xfade",error:a instanceof Error?a.message:"Erro desconhecido no servi\xe7o"},{status:500})}return console.log("✅ [API] Dados de sa\xfade encontrados:",b?.length||0),u.NextResponse.json(b||[])}catch(a){return console.error("❌ [API] ERRO GERAL ao buscar dados de sa\xfade:",a),console.error("❌ [API] Stack trace geral:",a instanceof Error?a.stack:"N/A"),console.error("❌ [API] Tipo do erro:",typeof a),console.error("❌ [API] Mensagem do erro:",a instanceof Error?a.message:"N/A"),u.NextResponse.json({message:"Erro interno do servidor",error:a instanceof Error?a.message:"Erro desconhecido",details:"Erro na API de health-data"},{status:500})}}async function y(a){try{console.log("➕ Criando novo dado de sa\xfade...");let b=w(a);if(!b)return console.log("❌ Falha na autentica\xe7\xe3o - token inv\xe1lido"),u.NextResponse.json({message:"Token de autoriza\xe7\xe3o inv\xe1lido"},{status:401});let c=await a.json();console.log("\uD83D\uDCE6 Dados recebidos:",c);let{type:d,value:e,secondaryValue:f,date:g,notes:h}=c;if(!d||void 0===e||!g)return console.log("❌ Dados obrigat\xf3rios faltando:",{type:d,value:e,date:g}),u.NextResponse.json({message:"Tipo, valor e data s\xe3o obrigat\xf3rios"},{status:400});if(!["bloodPressure","heartRate","glucose","weight","temperature"].includes(d))return console.log("❌ Tipo inv\xe1lido:",d),u.NextResponse.json({message:"Tipo de dado inv\xe1lido"},{status:400});console.log("\uD83D\uDCBE Criando dado de sa\xfade no banco para usu\xe1rio:",b);let i=await v.e.addHealthData({type:d,value:parseFloat(e),secondaryValue:f?parseFloat(f):void 0,date:g,notes:h||void 0},b);return console.log("✅ Dado de sa\xfade criado com sucesso:",i.id),u.NextResponse.json({success:!0,message:"Dado de sa\xfade registrado com sucesso",data:i},{status:201})}catch(a){return console.error("❌ ERRO DETALHADO ao criar dado de sa\xfade:",a),console.error("❌ Stack trace:",a instanceof Error?a.stack:"N/A"),u.NextResponse.json({message:"Erro interno do servidor",error:a instanceof Error?a.message:"Erro desconhecido"},{status:500})}}async function z(a){try{console.log("\uD83C\uDF31 Gerando dados de exemplo...");let b=w(a);if(!b)return console.log("❌ Falha na autentica\xe7\xe3o - token inv\xe1lido"),u.NextResponse.json({message:"Token de autoriza\xe7\xe3o inv\xe1lido"},{status:401});let{action:c}=await a.json();if("generateSample"===c)return await v.e.generateSampleData(b),console.log("✅ Dados de exemplo gerados com sucesso"),u.NextResponse.json({success:!0,message:"Dados de exemplo gerados com sucesso"});return u.NextResponse.json({message:"A\xe7\xe3o inv\xe1lida"},{status:400})}catch(a){return console.error("❌ ERRO DETALHADO ao gerar dados de exemplo:",a),u.NextResponse.json({message:"Erro interno do servidor",error:a instanceof Error?a.message:"Erro desconhecido"},{status:500})}}let A=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/health-data/route",pathname:"/api/health-data",filename:"route",bundlePath:"app/api/health-data/route"},distDir:".next",projectDir:"",resolvedPagePath:"D:\\Arquivos\\Portif\xf3lio\\Programa\xe7\xe3o\\care-idosos\\app\\api\\health-data\\route.ts",nextConfigOutput:"",userland:d}),{workAsyncStorage:B,workUnitAsyncStorage:C,serverHooks:D}=A;function E(){return(0,g.patchFetch)({workAsyncStorage:B,workUnitAsyncStorage:C})}async function F(a,b,c){var d;let e="/api/health-data/route";"/index"===e&&(e="/");let g=await A.prepare(a,b,{srcPage:e,multiZoneDraftMode:"false"});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:z,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(y.dynamicRoutes[E]||y.routes[D]);if(F&&!x){let a=!!y.routes[D],b=y.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||A.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===A.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:y,renderOpts:{experimental:{dynamicIO:!!w.experimental.dynamicIO,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>A.onRequestError(a,b,d,z)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>A.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await A.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},z),b}},l=await A.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await A.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},79464:(a,b,c)=>{"use strict";c.d(b,{z:()=>e});var d=c(96330);let e=globalThis.prisma??new d.PrismaClient({log:["query"]})},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},96330:a=>{"use strict";a.exports=require("@prisma/client")},96487:()=>{}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[985,55],()=>b(b.s=58259));module.exports=c})();