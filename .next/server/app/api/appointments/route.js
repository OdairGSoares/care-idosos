/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/appointments/route";
exports.ids = ["app/api/appointments/route"];
exports.modules = {

/***/ "(rsc)/./app/api/appointments/route.ts":
/*!***************************************!*\
  !*** ./app/api/appointments/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_prisma_appointmentService_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../services/prisma/appointmentService.prisma */ \"(rsc)/./app/services/prisma/appointmentService.prisma.ts\");\n\n\nfunction getUserIdFromRequest(request) {\n    try {\n        const authHeader = request.headers.get('authorization');\n        console.log('üîê Authorization header:', authHeader ? 'Presente' : 'Ausente');\n        if (!authHeader || !authHeader.startsWith('Bearer ')) {\n            console.log('‚ùå Header de autoriza√ß√£o inv√°lido');\n            return null;\n        }\n        const token = authHeader.substring(7);\n        console.log('üé´ Token extra√≠do (primeiros 20 chars):', token.substring(0, 20) + '...');\n        // Decodificar o token JWT para extrair o userId\n        const base64Payload = token.split('.')[1];\n        const payload = JSON.parse(atob(base64Payload));\n        console.log('üë§ UserId extra√≠do:', payload?.userId);\n        return payload?.userId || null;\n    } catch (error) {\n        console.error('‚ùå Erro ao extrair userId do token:', error);\n        return null;\n    }\n}\nasync function GET(request) {\n    try {\n        const userId = getUserIdFromRequest(request);\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'Token de autoriza√ß√£o inv√°lido'\n            }, {\n                status: 401\n            });\n        }\n        console.log('üîç Buscando consultas no Prisma para userId:', userId);\n        // Buscar consultas do usu√°rio usando Prisma\n        const appointments = await _services_prisma_appointmentService_prisma__WEBPACK_IMPORTED_MODULE_1__.PrismaAppointmentService.getAppointments(userId);\n        // Mapear dados para formato esperado pelo frontend\n        const formattedAppointments = appointments.map((appointment)=>({\n                id: appointment.id,\n                date: appointment.date,\n                time: appointment.time,\n                confirmed: appointment.confirmed,\n                userId: appointment.userId,\n                doctorId: appointment.doctorId,\n                locationId: appointment.locationId,\n                createdAt: appointment.createdAt.toISOString(),\n                doctor: {\n                    doctorId: appointment.doctor.id,\n                    doctorName: appointment.doctor.name,\n                    specialty: appointment.doctor.specialty\n                },\n                location: {\n                    locationId: appointment.location.id,\n                    locationName: appointment.location.name,\n                    locationAddress: appointment.location.address,\n                    locationCity: appointment.location.city\n                }\n            }));\n        console.log('‚úÖ Consultas encontradas no Prisma:', formattedAppointments.length);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(formattedAppointments);\n    } catch (error) {\n        console.error('‚ùå Erro ao buscar consultas no Prisma:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Erro interno do servidor'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        console.log('üöÄ Iniciando cria√ß√£o de consulta...');\n        const userId = getUserIdFromRequest(request);\n        console.log('üîç UserId obtido:', userId);\n        if (!userId) {\n            console.log('‚ùå Falha na autentica√ß√£o - token inv√°lido');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'Token de autoriza√ß√£o inv√°lido'\n            }, {\n                status: 401\n            });\n        }\n        const body = await request.json();\n        console.log('üì¶ Dados recebidos:', body);\n        const { doctorId, locationId, date, time } = body;\n        // Validar dados obrigat√≥rios\n        if (!doctorId || !locationId || !date || !time) {\n            console.log('‚ùå Dados obrigat√≥rios faltando:', {\n                doctorId,\n                locationId,\n                date,\n                time\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'M√©dico, localiza√ß√£o, data e hor√°rio s√£o obrigat√≥rios'\n            }, {\n                status: 400\n            });\n        }\n        console.log('üìÖ Criando nova consulta no Prisma para userId:', userId);\n        console.log('üìã Dados da consulta:', {\n            doctorId,\n            locationId,\n            date,\n            time\n        });\n        // Verificar disponibilidade do hor√°rio\n        console.log('‚è∞ Verificando disponibilidade...');\n        const isAvailable = await _services_prisma_appointmentService_prisma__WEBPACK_IMPORTED_MODULE_1__.PrismaAppointmentService.checkTimeSlotAvailability(doctorId, locationId, date, time);\n        console.log('‚úÖ Hor√°rio dispon√≠vel:', isAvailable);\n        if (!isAvailable) {\n            console.log('‚ùå Hor√°rio j√° ocupado');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'Este hor√°rio j√° est√° ocupado'\n            }, {\n                status: 409\n            });\n        }\n        // Criar nova consulta usando Prisma\n        console.log('üíæ Criando consulta no banco...');\n        const newAppointment = await _services_prisma_appointmentService_prisma__WEBPACK_IMPORTED_MODULE_1__.PrismaAppointmentService.createAppointment({\n            date,\n            time,\n            doctorId,\n            locationId,\n            userId\n        });\n        console.log('‚úÖ Consulta criada no Prisma:', newAppointment.id);\n        // Mapear para formato esperado pelo frontend\n        const formattedAppointment = {\n            id: newAppointment.id,\n            date: newAppointment.date,\n            time: newAppointment.time,\n            confirmed: newAppointment.confirmed,\n            userId: newAppointment.userId,\n            doctorId: newAppointment.doctorId,\n            locationId: newAppointment.locationId,\n            createdAt: newAppointment.createdAt.toISOString(),\n            doctor: {\n                doctorId: newAppointment.doctor.id,\n                doctorName: newAppointment.doctor.name,\n                specialty: newAppointment.doctor.specialty\n            },\n            location: {\n                locationId: newAppointment.location.id,\n                locationName: newAppointment.location.name,\n                locationAddress: newAppointment.location.address,\n                locationCity: newAppointment.location.city\n            }\n        };\n        console.log('üéâ Consulta formatada e pronta para retorno');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Consulta agendada com sucesso',\n            data: formattedAppointment\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error('‚ùå ERRO DETALHADO ao criar consulta:', error);\n        console.error('‚ùå Stack trace:', error instanceof Error ? error.stack : 'N/A');\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Erro interno do servidor',\n            error: error instanceof Error ? error.message : 'Erro desconhecido'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/appointments/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/services/prisma/appointmentService.prisma.ts":
/*!**********************************************************!*\
  !*** ./app/services/prisma/appointmentService.prisma.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PrismaAppointmentService: () => (/* binding */ PrismaAppointmentService)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nclass PrismaAppointmentService {\n    // Obter todas as consultas de um usu√°rio\n    static async getAppointments(userId) {\n        try {\n            console.log('üîç Buscando consultas no Prisma para userId:', userId);\n            const appointments = await prisma.appointment.findMany({\n                where: {\n                    userId: userId\n                },\n                include: {\n                    doctor: true,\n                    location: true\n                },\n                orderBy: [\n                    {\n                        date: 'asc'\n                    },\n                    {\n                        time: 'asc'\n                    }\n                ]\n            });\n            console.log('‚úÖ Consultas encontradas no Prisma:', appointments.length);\n            return appointments;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar consultas no Prisma:', error);\n            throw error;\n        }\n    }\n    // Obter uma consulta espec√≠fica por ID\n    static async getAppointmentById(appointmentId, userId) {\n        try {\n            console.log('üîç Buscando consulta no Prisma ID:', appointmentId);\n            const appointment = await prisma.appointment.findFirst({\n                where: {\n                    id: appointmentId,\n                    userId: userId\n                },\n                include: {\n                    doctor: true,\n                    location: true\n                }\n            });\n            return appointment;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar consulta no Prisma:', error);\n            throw error;\n        }\n    }\n    // Criar nova consulta\n    static async createAppointment(appointmentData) {\n        try {\n            console.log('üìÖ [PRISMA] Iniciando cria√ß√£o de consulta:', appointmentData);\n            // Verificar se m√©dico existe\n            console.log('üë®‚Äç‚öïÔ∏è [PRISMA] Verificando se m√©dico existe:', appointmentData.doctorId);\n            const doctor = await prisma.doctor.findUnique({\n                where: {\n                    id: appointmentData.doctorId\n                }\n            });\n            if (!doctor) {\n                console.error('‚ùå [PRISMA] M√©dico n√£o encontrado:', appointmentData.doctorId);\n                throw new Error(`M√©dico com ID ${appointmentData.doctorId} n√£o foi encontrado`);\n            }\n            console.log('‚úÖ [PRISMA] M√©dico encontrado:', doctor.name);\n            // Verificar se localiza√ß√£o existe\n            console.log('üè• [PRISMA] Verificando se localiza√ß√£o existe:', appointmentData.locationId);\n            const location = await prisma.location.findUnique({\n                where: {\n                    id: appointmentData.locationId\n                }\n            });\n            if (!location) {\n                console.error('‚ùå [PRISMA] Localiza√ß√£o n√£o encontrada:', appointmentData.locationId);\n                throw new Error(`Localiza√ß√£o com ID ${appointmentData.locationId} n√£o foi encontrada`);\n            }\n            console.log('‚úÖ [PRISMA] Localiza√ß√£o encontrada:', location.name);\n            // Verificar se usu√°rio existe\n            console.log('üë§ [PRISMA] Verificando se usu√°rio existe:', appointmentData.userId);\n            const user = await prisma.user.findUnique({\n                where: {\n                    id: appointmentData.userId\n                }\n            });\n            if (!user) {\n                console.error('‚ùå [PRISMA] Usu√°rio n√£o encontrado:', appointmentData.userId);\n                throw new Error(`Usu√°rio com ID ${appointmentData.userId} n√£o foi encontrado`);\n            }\n            console.log('‚úÖ [PRISMA] Usu√°rio encontrado:', user.email);\n            console.log('üíæ [PRISMA] Criando registro no banco...');\n            const appointment = await prisma.appointment.create({\n                data: {\n                    date: appointmentData.date,\n                    time: appointmentData.time,\n                    doctorId: appointmentData.doctorId,\n                    locationId: appointmentData.locationId,\n                    userId: appointmentData.userId,\n                    confirmed: false\n                },\n                include: {\n                    doctor: true,\n                    location: true\n                }\n            });\n            console.log('‚úÖ [PRISMA] Consulta criada com sucesso:', appointment.id);\n            return appointment;\n        } catch (error) {\n            console.error('‚ùå [PRISMA] ERRO DETALHADO ao criar consulta:', error);\n            console.error('‚ùå [PRISMA] Stack trace:', error instanceof Error ? error.stack : 'N/A');\n            throw error;\n        }\n    }\n    // Atualizar consulta (confirma√ß√£o, reagendamento, etc.)\n    static async updateAppointment(appointmentId, updateData, userId) {\n        try {\n            console.log('‚úèÔ∏è Atualizando consulta no Prisma:', appointmentId, updateData);\n            const appointment = await prisma.appointment.updateMany({\n                where: {\n                    id: appointmentId,\n                    userId: userId\n                },\n                data: updateData\n            });\n            if (appointment.count === 0) {\n                return null; // Consulta n√£o encontrada ou n√£o pertence ao usu√°rio\n            }\n            // Buscar a consulta atualizada com rela√ß√µes\n            const updatedAppointment = await this.getAppointmentById(appointmentId, userId);\n            console.log('‚úÖ Consulta atualizada no Prisma:', appointmentId);\n            return updatedAppointment;\n        } catch (error) {\n            console.error('‚ùå Erro ao atualizar consulta no Prisma:', error);\n            throw error;\n        }\n    }\n    // Confirmar presen√ßa em consulta\n    static async confirmAppointment(appointmentId, userId) {\n        try {\n            console.log('‚úÖ Confirmando presen√ßa no Prisma:', appointmentId);\n            return await this.updateAppointment(appointmentId, {\n                confirmed: true\n            }, userId);\n        } catch (error) {\n            console.error('‚ùå Erro ao confirmar presen√ßa no Prisma:', error);\n            throw error;\n        }\n    }\n    // Cancelar consulta\n    static async deleteAppointment(appointmentId, userId) {\n        try {\n            console.log('üóëÔ∏è Removendo consulta no Prisma:', appointmentId);\n            const appointment = await prisma.appointment.deleteMany({\n                where: {\n                    id: appointmentId,\n                    userId: userId\n                }\n            });\n            if (appointment.count === 0) {\n                return null; // Consulta n√£o encontrada ou n√£o pertence ao usu√°rio\n            }\n            console.log('‚úÖ Consulta removida no Prisma:', appointmentId);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('‚ùå Erro ao remover consulta no Prisma:', error);\n            throw error;\n        }\n    }\n    // Obter consultas por per√≠odo\n    static async getAppointmentsByDateRange(userId, startDate, endDate) {\n        try {\n            console.log('üìÖ Buscando consultas por per√≠odo no Prisma:', {\n                userId,\n                startDate,\n                endDate\n            });\n            const appointments = await prisma.appointment.findMany({\n                where: {\n                    userId: userId,\n                    date: {\n                        gte: startDate,\n                        lte: endDate\n                    }\n                },\n                include: {\n                    doctor: true,\n                    location: true\n                },\n                orderBy: [\n                    {\n                        date: 'asc'\n                    },\n                    {\n                        time: 'asc'\n                    }\n                ]\n            });\n            console.log('‚úÖ Consultas encontradas por per√≠odo:', appointments.length);\n            return appointments;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar consultas por per√≠odo no Prisma:', error);\n            throw error;\n        }\n    }\n    // Obter pr√≥ximas consultas (√∫til para dashboard)\n    static async getUpcomingAppointments(userId, limit = 5) {\n        try {\n            const today = new Date().toISOString().split('T')[0];\n            console.log('üîú Buscando pr√≥ximas consultas no Prisma para:', userId);\n            const appointments = await prisma.appointment.findMany({\n                where: {\n                    userId: userId,\n                    date: {\n                        gte: today\n                    }\n                },\n                include: {\n                    doctor: true,\n                    location: true\n                },\n                orderBy: [\n                    {\n                        date: 'asc'\n                    },\n                    {\n                        time: 'asc'\n                    }\n                ],\n                take: limit\n            });\n            console.log('‚úÖ Pr√≥ximas consultas encontradas:', appointments.length);\n            return appointments;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar pr√≥ximas consultas no Prisma:', error);\n            throw error;\n        }\n    }\n    // Obter m√©dicos dispon√≠veis\n    static async getDoctors() {\n        try {\n            console.log('üë®‚Äç‚öïÔ∏è Buscando m√©dicos no Prisma');\n            const doctors = await prisma.doctor.findMany({\n                orderBy: {\n                    name: 'asc'\n                }\n            });\n            console.log('‚úÖ M√©dicos encontrados:', doctors.length);\n            return doctors;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar m√©dicos no Prisma:', error);\n            throw error;\n        }\n    }\n    // Obter localiza√ß√µes dispon√≠veis\n    static async getLocations() {\n        try {\n            console.log('üè• Buscando localiza√ß√µes no Prisma');\n            const locations = await prisma.location.findMany({\n                orderBy: {\n                    name: 'asc'\n                }\n            });\n            console.log('‚úÖ Localiza√ß√µes encontradas:', locations.length);\n            return locations;\n        } catch (error) {\n            console.error('‚ùå Erro ao buscar localiza√ß√µes no Prisma:', error);\n            throw error;\n        }\n    }\n    // Verificar disponibilidade de hor√°rio\n    static async checkTimeSlotAvailability(doctorId, locationId, date, time) {\n        try {\n            console.log('‚è∞ [PRISMA] Verificando disponibilidade:', {\n                doctorId,\n                locationId,\n                date,\n                time\n            });\n            const existingAppointment = await prisma.appointment.findFirst({\n                where: {\n                    doctorId: doctorId,\n                    locationId: locationId,\n                    date: date,\n                    time: time\n                }\n            });\n            const isAvailable = !existingAppointment;\n            console.log('‚úÖ [PRISMA] Hor√°rio dispon√≠vel:', isAvailable);\n            if (existingAppointment) {\n                console.log('‚ö†Ô∏è [PRISMA] Consulta existente encontrada:', existingAppointment.id);\n            }\n            return isAvailable;\n        } catch (error) {\n            console.error('‚ùå [PRISMA] Erro ao verificar disponibilidade:', error);\n            console.error('‚ùå [PRISMA] Stack trace:', error instanceof Error ? error.stack : 'N/A');\n            throw error;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/services/prisma/appointmentService.prisma.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fappointments%2Froute&page=%2Fapi%2Fappointments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fappointments%2Froute.ts&appDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fappointments%2Froute&page=%2Fapi%2Fappointments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fappointments%2Froute.ts&appDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var D_Arquivos_Portif_lio_Programa_o_care_idosos_app_api_appointments_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/appointments/route.ts */ \"(rsc)/./app/api/appointments/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/appointments/route\",\n        pathname: \"/api/appointments\",\n        filename: \"route\",\n        bundlePath: \"app/api/appointments/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"D:\\\\Arquivos\\\\Portif√≥lio\\\\Programa√ß√£o\\\\care-idosos\\\\app\\\\api\\\\appointments\\\\route.ts\",\n    nextConfigOutput,\n    userland: D_Arquivos_Portif_lio_Programa_o_care_idosos_app_api_appointments_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/appointments/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fappointments%2Froute&page=%2Fapi%2Fappointments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fappointments%2Froute.ts&appDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fappointments%2Froute&page=%2Fapi%2Fappointments%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fappointments%2Froute.ts&appDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5CArquivos%5CPortif%C3%B3lio%5CPrograma%C3%A7%C3%A3o%5Ccare-idosos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();